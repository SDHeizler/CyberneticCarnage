{"version":3,"sources":["pictures/YourRobotPic.jpg","pictures/menu.svg","pictures/Robot1.jpg","RobotsDatabasetest.js","components/NavBar.js","components/Home.js","components/YourRobotStats.js","components/YourRobot.js","components/Filler.js","components/HealthBar.js","components/RobotFightCard.js","components/EnemyFightCard.js","components/OneFight.js","components/404.js","components/YouLose.js","components/YouWin.js","components/Reset.js","App.js","index.js"],"names":["module","exports","Robots","name","Health","PlayerRobot","Attacks","NavBar","id","className","style","NavBarStyle","onClick","this","props","NavBarResetStyle","TitleStyle","LinkContainerStyle","NavBarLinkStyle","to","containerHamburgerMenu","onPointerLeave","onPointerEnter","imgStyle","src","Menu","alt","containerGitHubLink","GitHubLinkStyle","ListItemStyle","target","rel","hrefStyle","href","React","Component","height","background","display","justifyContent","paddingTop","color","width","textDecoration","fontSize","fontFamily","marginRight","marginLeft","position","left","borderBottom","borderRadius","transition","Home","HomePageStyle","HomeStyleNav","LinkStyle","FooterStyle","marginTop","bottom","YourRobotStats","DivContStyle","DivSize","YourRobotImageStyle","RobotImage","UlListStyle","YourRobotStatsStyle","YourRobotHealthStyle","health","OlListStyle","YourRobotAttackStyle","attacks","map","ele","index","YourRobotAttackListStyle","key","listStyleType","textAlign","border","backgroundColor","flexDirection","alignItems","YourRobot","state","YourRobotPageStyle","_id","YourRobotPic","Filler","HealthBar","progressBar","RobotFightCard","AttackStyle","Name","RobotImageStyle","formStyle","onSubmit","e","LabelInputStyle","htmlFor","onChange","type","value","checked","Number","Checked","required","disabled","EnemyFightCard","EnemyStyle","EnemyImageStyle","EnemyRobotPic","OneFight","FightPageStyle","containerStyle","EnemyRobot","Robot1","Error","YouLose","YouLosePageStyle","YouLoseButtonStyle","paddingLeft","paddingRight","paddingBottom","YouWin","YouWinPageStyle","YouWinButtonStyle","Reset","ResetPageStyle","ResetPageButtonStyle","App","prop","a","preventDefault","setState","PlayerAttack","NaN","EnemyAttackStyle","enemyChoice","Math","floor","random","newPlayerHealth","Disabled","setTimeout","healEnemy","animationName","animationDuration","animationTimingFunction","updatePlayer","updateEnemy","history","push","padding","youWinButton","enemyId","axios","delete","then","response","data","catch","err","console","log","newEnemyRobot","length","resetButton","post","resetRobots","find","getEnemyRobot","EnemyRobots","get","res","getEnemyRobots","filter","enemyNum","findEnemyRobot","exact","path","withRouter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0GAAAA,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,6OCqD5BC,EArDA,CACX,CACIC,KAAK,YACLC,OAAO,IACPC,aAAa,EACbC,QAAQ,CACJ,SAAU,SAAS,SAG3B,CACIH,KAAK,YACLC,OAAO,IACPC,aAAa,EACbC,QAAQ,IAGZ,CACIH,KAAK,cACLC,OAAO,IACPC,aAAa,EACbC,QAAQ,IAGX,CACGH,KAAK,aACLC,OAAO,IACPC,aAAa,EACbC,QAAQ,IAGX,CACGH,KAAK,aACLC,OAAO,IACPC,aAAa,EACbC,QAAQ,IAGX,CACGH,KAAK,YACLC,OAAO,IACPC,aAAa,EACbC,QAAQ,IAGX,CACGH,KAAK,cACLC,OAAO,IACPC,aAAa,EACbC,QAAQ,K,yBC5CVC,E,uKAGE,OACI,yBAAKC,GAAG,qBAAqBC,UAAU,sBAAsBC,MAAOC,GAChE,4BAAQC,QAASC,KAAKC,MAAMF,QAASJ,GAAG,oBAAoBC,UAAU,cAAcC,MAAOK,GAA3F,SACA,wBAAIP,GAAG,cAAcE,MAAOM,GAA5B,sBACA,yBAAKN,MAAOO,GACZ,6BACI,kBAAC,IAAD,CAAMR,UAAU,YAAYC,MAAOQ,EAAiBC,GAAG,KAAvD,SAEJ,yBAAKT,MAAOU,GACR,yBAAKC,eAAgBR,KAAKC,MAAMO,eAAgBC,eAAgBT,KAAKC,MAAMQ,eAAgBZ,MAAOa,EAAUC,IAAKC,IAAMC,IAAI,KAC3H,yBAAKhB,MAAOiB,GACZ,wBAAKlB,UAAU,qBAAqBY,eAAgBR,KAAKC,MAAMO,eAAgBC,eAAgBT,KAAKC,MAAMQ,eAAgBZ,MAAOG,KAAKC,MAAMc,iBACxI,wBAAIlB,MAAOmB,GAAe,uBAAGC,OAAO,SAASC,IAAI,sBAAsBrB,MAAOsB,EAAWC,KAAK,KAApE,WAC1B,wBAAIvB,MAAOmB,GAAe,uBAAGnB,MAAOsB,EAAWC,KAAK,2CAA2CH,OAAO,SAASC,IAAI,uBAAzF,uB,GAhB7BG,IAAMC,WAyBrBxB,EAAc,CAChByB,OAAO,OACPC,WAAW,UACXC,QAAQ,OACRC,eAAe,eACfC,WAAW,OACXC,MAAM,QACNC,MAAM,QAEJxB,EAAkB,CACpBuB,MAAM,QACNE,eAAe,OACfC,SAAS,OACTC,WAAW,4CAETtB,EAAW,CACba,OAAO,OACPM,MAAM,OACNI,YAAY,MACZC,WAAW,OAET9B,EAAoB,CACtBqB,QAAQ,QAGNX,EAAsB,CACxBqB,SAAS,WACTC,KAAK,KAEH7B,EAAyB,CAC3B4B,SAAS,WACTF,YAAY,OAEVjB,EAAgB,CAClBqB,aAAa,kBACbL,WAAW,4CAETb,EAAU,CACZS,MAAM,QACNE,eAAe,OACfC,SAAS,QAEP7B,EAAmB,CACrB+B,YAAY,OACZK,aAAa,OAEXnC,EAAa,CACf8B,YAAY,OACZD,WAAW,2CACXO,WAAY,sBAUD7C,ICpFT8C,E,uKAEE,OACI,yBAAK5C,UAAU,WAAWC,MAAO4C,GAC7B,kBAAC,EAAD,CAAQ1C,QAASC,KAAKC,MAAMF,QAASS,eAAgBR,KAAKC,MAAMO,eAAgBC,eAAgBT,KAAKC,MAAMQ,eAAgBM,gBAAiBf,KAAKC,MAAMc,kBACvJ,yBAAKnB,UAAU,2BACX,wBAAIA,UAAU,aAAd,iCACA,uBAAGA,UAAU,OAAOC,MAAO,CAACkC,SAAS,SAArC,0BAEJ,yBAAKnC,UAAU,eAAeC,MAAO6C,GACrC,kBAAC,IAAD,CAAM9C,UAAU,YAAYC,MAAO8C,EAAWrC,GAAG,cAAjD,aACA,kBAAC,IAAD,CAAMV,UAAU,YAAYC,MAAO8C,EAAYrC,GAAG,iBAAlD,WAEA,4BAAQV,UAAU,qBAAqBC,MAAO+C,GAC1C,6D,GAdDvB,IAAMC,WAoBnBoB,EAAe,CACjBjB,QAAQ,OACRC,eAAe,eACfK,SAAS,OACTc,UAAU,QAERF,EAAY,CACdb,eAAe,OACfF,MAAM,QACNI,WAAW,4CAETS,EAAgB,CAClBb,MAAM,QACNL,OAAO,OAGLqB,EAAc,CAChBrB,OAAO,OACPM,MAAM,OACNM,SAAS,WACTW,OAAO,KAYIN,ICtDTO,E,uKAEE,OACI,yBAAKlD,MAAOmD,EAAcpD,UAAU,uBAC5B,wBAAID,GAAG,gBAAgBE,MAAO,CAACmC,WAAW,2CAA4CD,SAAS,QAA/F,SAA8G/B,KAAKC,MAAMX,MACzH,yBAAKO,MAAOoD,GACZ,yBAAKpD,MAAOqD,EAAqBvC,IAAKX,KAAKC,MAAMkD,WAAYtC,IAAI,KACjE,wBAAIhB,MAAOuD,GACP,wBAAIvD,MAAOwD,GAAX,UACA,wBAAIxD,MAAOyD,GAAX,UAAyCtD,KAAKC,MAAMsD,UAGxD,yBAAK1D,MAAOoD,GACZ,wBAAIpD,MAAO2D,GACP,wBAAI3D,MAAO4D,GAAX,YACCzD,KAAKC,MAAMyD,QAAQC,KAAI,SAACC,EAAKC,GAC1B,OACA,wBAAIhE,MAAOiE,EAA0BC,IAAKF,GAAQD,a,GAjBjDvC,IAAMC,WA0B7B8B,EAAc,CAChBY,cAAc,OACdC,UAAU,UAERT,EAAc,CAChBS,UAAU,UAERhB,EAAU,CACZpB,MAAM,OAGJqB,EAAsB,CACxB3B,OAAO,OACPM,MAAM,OACNG,WAAW,4CAETqB,EAAsB,CACxBtB,SAAS,QACTC,WAAW,4CAETsB,EAAuB,CACzBvB,SAAS,QACTC,WAAW,4CAETyB,EAAuB,CACzB1B,SAAS,QACTC,WAAW,4CAET8B,EAA2B,CAC7B/B,SAAS,QACTC,WAAW,4CAETgB,EAAe,CACjBkB,OAAO,kBACPC,gBAAgB,6BAChBvC,MAAM,QACNU,aAAa,MACbO,UAAU,OACVpB,QAAQ,OACR2C,cAAc,SACdC,WAAW,SACXxC,MAAM,OACNN,OAAO,OACPW,WAAW,OACXD,YAAY,QASDc,I,iBC5ETuB,E,kDACF,WAAYrE,GAAO,IAAD,8BACd,cAAMA,IACDsE,MAAQ,CACTD,UAAU,IAHA,E,qDAOd,OACI,yBAAK1E,UAAU,gBAAgBC,MAAO2E,GAClC,kBAAC,EAAD,CACAzE,QAASC,KAAKC,MAAMF,QACpBS,eAAgBR,KAAKC,MAAMO,eAC3BC,eAAgBT,KAAKC,MAAMQ,eAC3BM,gBAAiBf,KAAKC,MAAMc,kBAE3Bf,KAAKC,MAAMqE,UAAUX,KAAI,SAACC,GACnB,OACI,kBAAC,EAAD,CACAG,IAAKH,EAAIa,IACTnF,KAAMsE,EAAItE,KACViE,OAAQK,EAAIrE,OACZmE,QAASE,EAAInE,QACb0D,WAAYuB,c,GAvBhBrD,IAAMC,WA+BxBkD,EAAqB,CACvBjD,OAAO,QACPK,MAAM,SAUK0C,ICtCAK,G,uKAPP,OACI,yBAAK9E,MAAO,CAACgC,MAAM,GAAD,OAAI7B,KAAKC,MAAMV,OAAf,KAA0B4E,gBAAgB,UAAY7B,aAAa,OAAQf,OAAO,OAAQ0C,UAAU,gB,GAH7G5C,IAAMC,WCErBsD,G,4MACFL,MAAQ,G,uDAEJ,OACI,6BACE,yBAAK1E,MAAOgF,IACR,kBAAC,GAAD,CAAQtF,OAAQS,KAAKC,MAAMV,e,GANrB8B,IAAMC,WAYxBuD,GAAY,CACd3C,WAAW,OACXD,YAAY,OACZV,OAAO,OACPM,MAAM,OACNS,aAAa,OACb4B,OAAO,kBACP/B,SAAS,YAOEyC,MC1BTE,G,uKAGQ,IAAD,OACL,OACI,yBAAKlF,UAAU,+BAA+BC,MAAOG,KAAKC,MAAM8E,aAC5D,4BAAK/E,KAAKC,MAAM+E,MAChB,yBAAKnF,MAAOoF,GAAiBtE,IAAKX,KAAKC,MAAMkD,WAAYtC,IAAI,KAC7D,uCAAab,KAAKC,MAAMV,OAAxB,KACA,kBAAC,GAAD,CAAWA,OAAQS,KAAKC,MAAMV,SAC9B,0BAAMK,UAAU,OAAOC,MAAOqF,GAC9BjE,OAAO,QACHkE,SAAU,SAACC,GAAO,EAAKnF,MAAMkF,SAASC,KAErCpF,KAAKC,MAAMR,QAAQkE,KAAI,SAACC,EAAKC,GAC1B,OACQ,2BACIhE,MAAOwF,GACPtB,IAAKF,EACLyB,QAAQ,WACP1B,EAJL,IAIW,IACH,2BAAO2B,SAAU,SAACH,GAAD,OAAO,EAAKnF,MAAMsF,SAASH,IAC5C9F,KAAK,UACLkG,KAAK,QACLC,MAAO7B,EACPjE,GAAIkE,EACJ6B,QAASC,OAAO,EAAK1F,MAAM2F,WAAa/B,EACxCgC,UAAQ,QAM5B,4BAAQC,SAAU9F,KAAKC,MAAM6F,SAAUlG,UAAU,yBAAyB4F,KAAK,UAA/E,kB,GAjCSnE,IAAMC,WAyC7B4D,GAAU,CACZzD,QAAQ,OACR2C,cAAc,UAGZa,GAAkB,CACpB1D,OAAO,OACPM,MAAM,QAEJwD,GAAkB,CACpBtD,SAAS,QACTc,UAAU,QAYCiC,MChETiB,G,uKAIE,OACI,yBAAKnG,UAAU,qBAAqBC,MAAOG,KAAKC,MAAM+F,YAClD,4BAAKhG,KAAKC,MAAM+E,MAChB,yBAAKnF,MAAOoG,GAAiBtF,IAAKX,KAAKC,MAAMiG,cAAerF,IAAI,KAChE,wBAAIhB,MAAO,CAAC0C,WAAW,kBAAmB5C,GAAG,oBAA7C,UAAwEK,KAAKC,MAAMV,OAAnF,KACA,kBAAC,GAAD,CAAWA,OAAQS,KAAKC,MAAMV,c,GATjB8B,IAAMC,WAc7B2E,GAAkB,CACpB1E,OAAO,OACPM,MAAM,OAUKkE,M,oBCtBTI,G,uKAIQ,IAAD,OACL,OACI,yBAAKvG,UAAU,YAAYC,MAAOuG,IAC9B,kBAAC,EAAD,CACArG,QAASC,KAAKC,MAAMF,QACpBS,eAAgBR,KAAKC,MAAMO,eAC3BC,eAAgBT,KAAKC,MAAMQ,eAC3BM,gBAAiBf,KAAKC,MAAMc,kBAC5B,gCACA,wBAAIlB,MAAO,CAACkC,SAAS,QAASC,WAAW,6CAAzC,YAEA,yBAAKnC,MAAOwG,IACXrG,KAAKC,MAAMqE,UAAUX,KAAI,SAACC,GACnB,OACA,kBAAC,GAAD,CAAgBG,IAAKH,EAAIa,IACzBO,KAAMpB,EAAItE,KACVG,QAASmE,EAAInE,QAAQkE,KAAI,SAACC,EAAKC,GAC3B,OAAOD,KAEXrE,OAAQqE,EAAIrE,OACZ4F,SAAU,SAACC,GAAD,OAAO,EAAKnF,MAAMkF,SAASC,IACrCG,SAAU,SAACH,GAAD,OAAO,EAAKnF,MAAMsF,SAASH,IACrCQ,QAAS,EAAK3F,MAAM2F,QACpBE,SAAU,EAAK7F,MAAM6F,SACrBf,YAAa,EAAK9E,MAAM8E,YACxB5B,WAAYuB,SAIpB,8BAGA,6BACK1E,KAAKC,MAAMqG,WAAW3C,KAAI,SAACC,EAAKC,GAC7B,OACI,kBAAC,GAAD,CACAE,IAAKH,EAAIa,IACTlF,OAASqE,EAAIrE,OACbyF,KAAOpB,EAAItE,KACX0G,WAAY,EAAK/F,MAAM+F,WACvBE,cAAeK,iB,GA5CpBlF,IAAMC,WAsDvB+E,GAAe,CACjB5E,QAAQ,OACRC,eAAe,UAEb0E,GAAiB,CACnB7E,OAAO,OACPK,MAAM,SAgBKuE,MC1EAK,OARf,WACI,OACI,6BACI,mCACA,kDCHNC,G,uKAEE,OACA,yBAAK7G,UAAU,cAAcC,MAAO6G,IAC5B,wFACA,4BAAQ7G,MAAO8G,GAAoB/G,UAAU,cAAcG,QAASC,KAAKC,MAAMF,SAA/E,c,GALMsB,IAAMC,WAUtBoF,GAAmB,CACrBnF,OAAO,OACPK,MAAM,SAEJ+E,GAAqB,CACvBC,YAAY,OACZC,aAAa,OACblF,WAAW,OACXmF,cAAc,OACd/E,SAAS,OACTC,WAAW,4CAOAyE,MC3BTM,G,uKAEE,OACA,yBAAKnH,UAAU,aAAaC,MAAOmH,IAC3B,wBAAInH,MAAO,CAACkC,SAAS,OAAOC,WAAW,6CAAvC,YACA,4BAAQnC,MAAOoH,GAAmBrH,UAAU,cAAcG,QAASC,KAAKC,MAAMF,SAA9E,iB,GALKsB,IAAMC,WAUrB0F,GAAkB,CACpBzF,OAAO,OACPK,MAAM,SAEJqF,GAAoB,CACrBL,YAAY,OACbC,aAAa,OACblF,WAAW,OACXmF,cAAc,OACd/E,SAAS,OACTC,WAAW,4CAOA+E,MC3BTG,G,uKAEE,OACI,yBAAKtH,UAAU,YAAYC,MAAOsH,IAC9B,wBAAItH,MAAO,CAACmC,WAAW,6CAAvB,2CACA,uBAAGnC,MAAO,CAACkC,SAAS,OAAOC,WAAW,6CAAtC,6BACA,4BAAQnC,MAAOuH,GAAsBxH,UAAU,cAAcG,QAASC,KAAKC,MAAMF,SAAjF,c,GANIsB,IAAMC,WAWpB6F,GAAiB,CACnB5F,OAAO,OACPK,MAAM,SAEJwF,GAAuB,CACzBR,YAAY,OACZC,aAAa,OACblF,WAAW,OACXmF,cAAc,OACd/E,SAAS,OACTC,WAAW,4CAOAkF,M,oBChBTG,G,kDACJ,aAAc,IAAD,8BACX,gBAwEFlC,SAzEa,uCAyEF,WAAOC,EAAGkC,GAAV,iBAAAC,EAAA,sDACTnC,EAAEoC,iBAGF,EAAKC,SAAL,2BAAmB,EAAKlD,OAAxB,IACImD,aAAa,GACb9B,QAAQ+B,IACR5C,YAAY,CACVlD,MAAM,OACNK,WAAW,IACXgC,OAAO,kBACPzC,QAAQ,eACRU,SAAS,WACTG,aAAa,OAEfsF,iBAAkB,CACd/F,MAAM,OACNK,WAAW,IACXgC,OAAO,kBACPzC,QAAQ,eACRU,SAAS,WACTG,aAAa,UAIhBuF,EAAcC,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAM,IAE1B,SAA5B,EAAKxD,MAAMmD,cAENO,EAAkB,EAAK1D,MAAMD,UAAUX,KAAI,SAACC,GAI9C,OAHkB,MAAfA,EAAIrE,SACHqE,EAAIrE,OAAS,KAEVqE,KAGX,EAAK6D,SAAL,2BAAkB,EAAKlD,OAAvB,IACED,UAAU2D,EACVC,UAAS,EACTR,aAAa,GACb9B,QAAQ+B,OAGVQ,YAAW,WACTA,YAAY,WACV,GAAmB,IAAhBN,EAAkB,CACvB,IAAIO,EAAY,EAAK7D,MAAM+B,WAAW3C,KAAI,SAACC,GAIvC,OAHGA,EAAIrE,OAAS,MACdqE,EAAIrE,QAAU,GAETqE,KAEP,EAAK6D,SAAL,2BAAkB,EAAKlD,OAAvB,IACA+B,WAAY8B,EACZR,iBAAiB,CACjB/F,MAAM,OACNK,WAAW,IACXgC,OAAO,kBACPzC,QAAQ,eACRU,SAAS,WACTG,aAAa,OAEf4F,UAAS,QAGV,KAEkB,IAAhBL,IACH,EAAKJ,SAAL,2BAAkB,EAAKlD,OAAvB,IACAQ,YAAY,CACVlD,MAAM,OACNK,WAAW,IACXgC,OAAO,kBACPzC,QAAQ,eACRU,SAAS,WACTG,aAAa,OAEbsF,iBAAiB,CACjB/F,MAAM,OACNK,WAAW,IACXgC,OAAO,kBACPzC,QAAQ,eACRU,SAAS,WACTkG,cAAc,cACdC,kBAAkB,KAClBC,wBAAwB,UACxBjG,aAAa,UAGjB6F,YAAW,WACT,IAAIK,EAAgB,EAAKjE,MAAMD,UAAUX,KAAI,SAACC,GAI1C,OAHGA,EAAIrE,OAAS,IAChBqE,EAAIrE,QAAU,IAEPqE,KAEX,EAAK6D,SAAL,2BAAkB,EAAKlD,OAAvB,IACE2D,UAAS,EACT5D,UAAUkE,EACRZ,iBAAkB,CAClB/F,MAAM,OACNK,WAAW,IACXgC,OAAO,kBACPzC,QAAQ,eACRU,SAAS,WACTG,aAAa,YAGhB,QAEA,MACgC,WAA5B,EAAKiC,MAAMmD,cAClB,EAAKD,SAAL,2BAAkB,EAAKlD,OAAvB,IACEQ,YAAY,CACZlD,MAAM,OACNK,WAAW,IACXgC,OAAO,iBACPzC,QAAQ,eACRU,SAAS,WACTG,aAAa,OAEboF,aAAa,GACb9B,QAAQ+B,IACRO,UAAS,EACTN,iBAAkB,CACd/F,MAAM,OACNK,WAAW,IACXgC,OAAO,kBACPzC,QAAQ,eACRU,SAAS,WACTG,aAAa,UAInB6F,YAAW,WACT,EAAKV,SAAL,2BAAkB,EAAKlD,OAAvB,IACEqD,iBAAiB,CACjB/F,MAAM,OACNK,WAAW,IACXgC,OAAO,kBACPzC,QAAQ,eACRU,SAAS,WACTkG,cAAc,cACdC,kBAAkB,KAClBC,wBAAwB,UACxBjG,aAAa,UAGjB6F,YAAW,WACT,EAAKV,SAAL,2BAAkB,EAAKlD,OAAvB,IACA2D,UAAS,EACTnD,YAAY,CACVlD,MAAM,OACNK,WAAW,IACXgC,OAAO,kBACPzC,QAAQ,eACRU,SAAS,WACTG,aAAa,OAEfsF,iBAAiB,CACf/F,MAAM,OACNK,WAAW,IACXgC,OAAO,kBACPzC,QAAQ,eACRU,SAAS,WACTG,aAAa,YAGd,OACA,OAEH6F,YAAW,WACT,IAAIM,EAAc,EAAKlE,MAAM+B,WAAW3C,KAAI,SAACC,GAI7C,OAHGA,EAAIrE,OAAS,IACdqE,EAAIrE,QAAU,IAETqE,KAGP,EAAK6D,SAAL,2BAAkB,EAAKlD,OAAvB,IACI+B,WAAWmC,EACXP,UAAS,OAEZ,KAEH,EAAKT,SAAL,2BAAkB,EAAKlD,OAAvB,IACEmD,aAAa,GACb9B,QAAQ+B,IACR5C,YAAY,CACVlD,MAAM,OACNK,WAAW,IACXgC,OAAO,kBACPzC,QAAQ,eACRU,SAAS,WACTkG,cAAc,SACdC,kBAAkB,KAClBC,wBAAwB,UACxBjG,aAAa,OAEfsF,iBAAkB,CACd/F,MAAM,OACNK,WAAW,IACXgC,OAAO,kBACPzC,QAAQ,eACRU,SAAS,WACTG,aAAa,UAIf6F,YAAW,WACN,EAAK5D,MAAM+B,WAAW,GAAG/G,QAAU,GACpC,EAAKkI,SAAS,CACV1C,YAAY,CACVlD,MAAM,OACNK,WAAW,IACXgC,OAAO,kBACPzC,QAAQ,eACRU,SAAS,WACTG,aAAa,OAEfsF,iBAAkB,CAChB/F,MAAM,OACNK,WAAW,IACXgC,OAAO,kBACPzC,QAAQ,eACRU,SAAS,WACTG,aAAa,SAGnB,EAAKrC,MAAMyI,QAAQC,KAAK,aAExBR,YAAY,WAChB,GAAmB,IAAhBN,EAAkB,CACvB,IAAIO,EAAY,EAAK7D,MAAM+B,WAAW3C,KAAI,SAACC,GAIvC,OAHGA,EAAIrE,OAAS,MACdqE,EAAIrE,QAAU,GAETqE,KAEP,EAAK6D,SAAL,2BAAkB,EAAKlD,OAAvB,IACA+B,WAAY8B,EACZR,iBAAiB,CACjB/F,MAAM,OACNK,WAAW,IACXgC,OAAO,kBACPzC,QAAQ,eACRU,SAAS,WACTG,aAAa,OAEf4F,UAAS,QAGV,KAEkB,IAAhBL,IACH,EAAKJ,SAAL,2BAAkB,EAAKlD,OAAvB,IACAQ,YAAY,CACVlD,MAAM,OACNK,WAAW,IACXgC,OAAO,kBACPzC,QAAQ,eACRU,SAAS,WACTG,aAAa,OAEbsF,iBAAiB,CACjB/F,MAAM,OACNK,WAAW,IACXgC,OAAO,kBACPzC,QAAQ,eACRU,SAAS,WACTkG,cAAc,cACdC,kBAAkB,KAClBC,wBAAwB,UACxBjG,aAAa,UAGjB6F,YAAW,WACT,IAAIK,EAAgB,EAAKjE,MAAMD,UAAUX,KAAI,SAACC,GAI1C,OAHGA,EAAIrE,OAAS,IAChBqE,EAAIrE,QAAU,IAEPqE,KAEX,EAAK6D,SAAL,2BAAkB,EAAKlD,OAAvB,IACE2D,UAAS,EACT5D,UAAUkE,EACRZ,iBAAkB,CAClB/F,MAAM,OACNK,WAAW,IACXgC,OAAO,kBACPzC,QAAQ,eACRU,SAAS,WACTG,aAAa,YAGhB,SAIA,MA3SI,2CAzEE,0DAyXbiD,SAAW,SAACH,GACV,EAAKqC,SAAL,2BAAkB,EAAKlD,OAAvB,IACEmD,aAAatC,EAAEnE,OAAOwE,MACtBG,QAAQR,EAAEnE,OAAOtB,OA5XR,EAgYbc,eAAiB,WACX,EAAKgH,SAAL,2BAAkB,EAAKlD,OAAvB,IACFxD,gBAAgB,CACdiD,cAAc,OACd7B,SAAS,WACT+B,OAAO,kBACP0E,QAAQ,OACRzE,gBAAgB,eAvYT,EA4Yb3D,eAAiB,WACf,EAAKiH,SAAL,2BAAkB,EAAKlD,OAAvB,IACExD,gBAAgB,CACdU,QAAQ,YA/YD,EAoZboH,aApZa,sBAoZE,gCAAAtB,EAAA,6DACPU,EAAkB,EAAK1D,MAAMD,UAAUX,KAAI,SAACC,GAE9C,OADAA,EAAIrE,OAAS,IACNqE,KAEHkF,EAAU,EAAKvE,MAAM+B,WAAW,GAAG7B,IAL9B,SAMgBsE,KAAMC,OAAN,yDAA+DF,IACrFG,MAAK,SAACC,GACL,OAAOA,EAASC,QAEjBC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAVrB,SAMPG,EANO,SAWYA,EAAcC,OAAS,EAC1C,EAAKxJ,MAAMyI,QAAQC,KAAK,6BAEtB,EAAKlB,SAAL,2BAAkB,EAAKlD,OAAvB,IACJD,UAAU2D,EACV3B,WAAW,CAACkD,GACZtB,UAAS,EACTnD,YAAY,CACVlD,MAAM,OACNK,WAAW,IACXgC,OAAO,kBACPzC,QAAQ,eACRU,SAAS,WACTG,aAAa,OAEbsF,iBAAkB,CAChB/F,MAAM,OACNK,WAAW,IACXgC,OAAO,kBACPzC,QAAQ,eACRU,SAAS,WACTG,aAAa,UAGnB,EAAKrC,MAAMyI,QAAQC,KAAK,uBAnCb,2CApZF,EA0bbe,YA1ba,sBA0bC,8BAAAnC,EAAA,sEACYwB,KAAMY,KAAK,kDACnC,CACEtK,WAED4J,MAAK,SAACC,GACL,OAAOA,EAASC,QAEjBC,OAAM,SAACC,GACNC,QAAQC,IAAIF,MATF,cACRO,EADQ,OAWZ,EAAKnC,SAAL,2BACK,EAAKlD,OADV,IAEElF,OAAOuK,EACP1B,UAAS,EACPnD,YAAY,CACVlD,MAAM,OACNK,WAAW,IACXgC,OAAO,kBACPzC,QAAQ,eACRU,SAAS,WACTG,aAAa,OAEbsF,iBAAkB,CAChB/F,MAAM,OACNK,WAAW,IACXgC,OAAO,kBACPzC,QAAQ,eACRU,SAAS,WACTG,aAAa,UA7BT,SAgCa,EAAKiC,MAAMlF,OAAOwK,MAAK,SAACjG,GAC/C,OAAuB,IAApBA,EAAIpE,YACEoE,EAEF,QApCG,OAgCTkG,EAhCS,OAsCZ,EAAKrC,SAAS,CACZnB,WAAW,CAACwD,KAEd,EAAK7J,MAAMyI,QAAQC,KAAK,sBAzCZ,2CAxbZ,EAAKpE,MAAM,CACPlF,OAAO,GACP0K,YAAY,GACZzD,WAAW,GACXhC,UAAU,GACVoD,aAAa,GACb9B,QAAQ+B,IACRO,UAAS,EACTnD,YAAY,CACZlD,MAAM,OACNK,WAAW,IACXgC,OAAO,kBACPzC,QAAQ,eACRU,SAAS,WACTG,aAAa,OAEbsF,iBAAkB,CACd/F,MAAM,OACNK,WAAW,IACXgC,OAAO,kBACPzC,QAAQ,eACRU,SAAS,WACTG,aAAa,OAEjBvB,gBAAgB,CACdU,QAAQ,SA3BH,E,yMAgCLsH,KAAMiB,IAAI,mDACjBf,MAAK,SAACgB,GACL,IAAI3F,EAAa2F,EAAId,KAAKU,MAAK,SAACjG,GAC7B,OAAuB,IAApBA,EAAIpE,YACGoE,EAEA,QAGTsG,EAAkBD,EAAId,KAAKgB,QAAO,SAACvG,GACrC,OAAuB,IAApBA,EAAIpE,YACEoE,EAEJ,QAEP,EAAK6D,SAAL,2BACG,EAAKlD,OADR,IAEAlF,OAAO4K,EAAId,KACX7E,UAAU,CAACA,GACXyF,YAAYG,QAIbd,OAAM,SAACC,GAASC,QAAQC,IAAIF,M,uBAENvB,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAM/H,KAAKuE,MAAMwF,YAAYN,S,cAA9EW,E,OACCpK,KAAKuE,MAAM+B,WAAWmD,O,SAGAzJ,KAAKuE,MAAMwF,YAAYF,MAAK,SAACjG,EAAIC,GACxD,OAAGA,IAAUuG,EACFxG,EAEJ,Q,OAJPyG,E,OAOJrK,KAAKyH,SAAL,2BAAkBzH,KAAKuE,OAAvB,IACI+B,WAAW,CAAC+D,M,sIAialB,OACE,yBAAKzK,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO0K,OAAK,EAACC,KAAK,sBAClB,kBAAC,EAAD,CACAxK,QAASC,KAAK0J,YACdlJ,eAAgBR,KAAKQ,eACrBC,eAAgBT,KAAKS,eACrBM,gBAAiBf,KAAKuE,MAAMxD,mBAE5B,kBAAC,IAAD,CAAOwJ,KAAK,gCACV,kBAAC,EAAD,CACAxK,QAASC,KAAK0J,YACdlJ,eAAgBR,KAAKQ,eACrBC,eAAgBT,KAAKS,eACrBM,gBAAiBf,KAAKuE,MAAMxD,gBAC5BuD,UAAWtE,KAAKuE,MAAMD,aACxB,kBAAC,IAAD,CAAOiG,KAAK,mCACR,kBAAC,GAAD,CACExK,QAASC,KAAK0J,YACdlJ,eAAgBR,KAAKQ,eACrBC,eAAgBT,KAAKS,eACrBM,gBAAiBf,KAAKuE,MAAMxD,gBAC5BuD,UAAWtE,KAAKuE,MAAMD,UACtBgC,WAAYtG,KAAKuE,MAAM+B,WACvBnB,SAAUnF,KAAKmF,SACfI,SAAUvF,KAAKuF,SACfK,QAAS5F,KAAKuE,MAAMqB,QACpBE,SAAU9F,KAAKuE,MAAM2D,SACrBnD,YAAa/E,KAAKuE,MAAMQ,YACxBiB,WAAYhG,KAAKuE,MAAMqD,oBAG3B,kBAAC,IAAD,CAAO2C,KAAK,8BAA6B,kBAAC,GAAD,CAASxK,QAASC,KAAK0J,eAChE,kBAAC,IAAD,CAAOa,KAAK,6BACV,kBAAC,GAAD,CACAxK,QAASC,KAAK6I,gBAEd,kBAAC,IAAD,CAAO0B,KAAK,4BAA2B,kBAAC,GAAD,CAAOxK,QAASC,KAAK0J,eAChE,kBAAC,IAAD,CAAQa,KAAK,IAAG,kBAAC,GAAD,a,GA9gBNlJ,IAAMC,WAiiBTkJ,eAAWnD,ICxiB1BoD,IAASC,OACP,kBAAC,IAAD,KACA,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,QAGFC,SAASC,eAAe,W","file":"static/js/main.bb0e7dc7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/YourRobotPic.ce6e68ba.jpg\";","module.exports = __webpack_public_path__ + \"static/media/menu.f80cd3a5.svg\";","module.exports = __webpack_public_path__ + \"static/media/Robot1.c35f1b67.jpg\";","const Robots = [\r\n    {\r\n        name:'Robot One',\r\n        Health:100,\r\n        PlayerRobot: true,\r\n        Attacks:[\r\n            'Attack', 'Defend','Heal'\r\n        ]\r\n    },\r\n    {\r\n        name:'Robot Two',\r\n        Health:100,\r\n        PlayerRobot: false,\r\n        Attacks:[\r\n        ]\r\n    },\r\n    {\r\n        name:'Robot Three',\r\n        Health:100,\r\n        PlayerRobot: false,\r\n        Attacks:[\r\n        ]\r\n    },\r\n     {\r\n        name:'Robot four',\r\n        Health:100,\r\n        PlayerRobot: false,\r\n        Attacks:[\r\n        ]\r\n    },\r\n     {\r\n        name:'Robot five',\r\n        Health:100,\r\n        PlayerRobot: false,\r\n        Attacks:[\r\n        ]\r\n    },\r\n     {\r\n        name:'Robot six',\r\n        Health:100,\r\n        PlayerRobot: false,\r\n        Attacks:[\r\n        ]\r\n    },\r\n     {\r\n        name:'Robot seven',\r\n        Health:100,\r\n        PlayerRobot: false,\r\n        Attacks:[\r\n        ]\r\n    },\r\n];\r\n\r\nexport default Robots;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Menu from '../pictures/menu.svg';\r\nimport PropTypes from 'prop-types';\r\nclass NavBar extends React.Component {\r\n\r\n    render() { \r\n        return ( \r\n            <div id='NavBarContainerDiv' className=' bg-dark text-white' style={NavBarStyle}>\r\n                <button onClick={this.props.onClick} id='NavBarResetButton' className=' btn-danger' style={NavBarResetStyle}>Reset</button>\r\n                <h4 id='NavBarTitle' style={TitleStyle}>Cybernetic Carnage</h4>\r\n                <div style={LinkContainerStyle}>\r\n                <div>\r\n                    <Link className='LinkHover' style={NavBarLinkStyle} to='/'>Home</Link>\r\n                </div>\r\n                <div style={containerHamburgerMenu}>\r\n                    <img onPointerLeave={this.props.onPointerLeave} onPointerEnter={this.props.onPointerEnter} style={imgStyle} src={Menu} alt=''></img>\r\n                    <div style={containerGitHubLink}>\r\n                    <ul  className='bg-dark text-white' onPointerLeave={this.props.onPointerLeave} onPointerEnter={this.props.onPointerEnter} style={this.props.GitHubLinkStyle}>\r\n                        <li style={ListItemStyle}><a target='_blank' rel='noopener noreferrer' style={hrefStyle} href='#'>Github</a></li>\r\n                        <li style={ListItemStyle}><a style={hrefStyle} href='https://sdheizler.github.io/MyPortfolio/' target='_blank' rel='noopener noreferrer'>Portfolio</a></li>\r\n                    </ul>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\nconst NavBarStyle = {\r\n    height:'55px',\r\n    background:'#234691',\r\n    display:'flex',\r\n    justifyContent:'space-around',\r\n    paddingTop:'10px',\r\n    color:'White',\r\n    width:'100%'\r\n}; \r\nconst NavBarLinkStyle = {\r\n    color:'White',\r\n    textDecoration:'none',\r\n    fontSize:'20px',\r\n    fontFamily:'Open Sans, Noto Sans, Roboto, Sans Sarif'\r\n};\r\nconst imgStyle = {\r\n    height:'25px',\r\n    width:'25px',\r\n    marginRight:'2em',\r\n    marginLeft:'2em'\r\n};\r\nconst LinkContainerStyle ={\r\n    display:'flex',\r\n    \r\n}\r\nconst containerGitHubLink = {\r\n    position:'absolute',\r\n    left:'0'\r\n};\r\nconst containerHamburgerMenu = {\r\n    position:'relative',\r\n    marginRight:'2vw'\r\n};\r\nconst ListItemStyle = {\r\n    borderBottom:'1px solid black',\r\n    fontFamily:'Open Sans, Noto Sans, Roboto, Sans Sarif'\r\n};\r\nconst hrefStyle={\r\n    color:'White',\r\n    textDecoration:'none',\r\n    fontSize:'20px'\r\n};\r\nconst NavBarResetStyle = {\r\n    marginRight:'auto',\r\n    borderRadius:'7px'\r\n};\r\nconst TitleStyle = {\r\n    marginRight:'30vw',\r\n    fontFamily:'Open Sans, Noto Sans, Roboto, Sans Sarif',\r\n    transition: 'ease-in-out, 200ms'\r\n};\r\n\r\n// PropTypes\r\nNavBar.propTypes = {\r\n    onClick:PropTypes.func,\r\n    onPointerEnter:PropTypes.func,\r\n    onPointerLeave:PropTypes.func,\r\n    \r\n};\r\nexport default NavBar;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport NavBar from './NavBar';\r\nimport PropTypes from 'prop-types';\r\nclass Home extends React.Component {\r\n    render() { \r\n        return ( \r\n            <div className='HomePage' style={HomePageStyle}>\r\n                <NavBar onClick={this.props.onClick} onPointerLeave={this.props.onPointerLeave} onPointerEnter={this.props.onPointerEnter} GitHubLinkStyle={this.props.GitHubLinkStyle}></NavBar>\r\n                <div className='jubotron jubotron-fluid'>\r\n                    <h1 className='display-3'>Welcome to Cybernetic Carnage</h1>\r\n                    <p className='lead' style={{fontSize:'30px'}}>Get ready for battle!</p>\r\n                </div>\r\n                <div className='homeStyleNav' style={HomeStyleNav}>\r\n                <Link className='LinkHover' style={LinkStyle} to='/YourRobot'>YourRobot</Link>\r\n                <Link className=\"LinkHover\" style={LinkStyle}  to='/SingleBattle'>Battle</Link>\r\n                </div>\r\n                <footer className='bg-dark text-white' style={FooterStyle}>\r\n                    <h4>&#169; 2020 Scott Heizler</h4>\r\n                </footer>\r\n            </div>\r\n         );\r\n    }\r\n}\r\nconst HomeStyleNav = {\r\n    display:'flex',\r\n    justifyContent:'space-around',\r\n    fontSize:'50px',\r\n    marginTop:'25vh',\r\n};\r\nconst LinkStyle = {\r\n    textDecoration:'none',\r\n    color:'White',\r\n    fontFamily:'Open Sans, Noto Sans, Roboto, Sans Sarif'\r\n};\r\nconst HomePageStyle = {\r\n    color:'White',\r\n    height:'95%',\r\n   \r\n};\r\nconst FooterStyle = {\r\n    height:'55px',\r\n    width:'100%',\r\n    position:'absolute',\r\n    bottom:'0'\r\n\r\n};\r\n\r\n\r\n// PropTypes\r\nHome.propTypes = {\r\n    onClick:PropTypes.func.isRequired,\r\n    onPointerEnter:PropTypes.func.isRequired,\r\n    onPointerLeave:PropTypes.func.isRequired,\r\n    GitHubLinkStyle:PropTypes.object\r\n};\r\nexport default Home;","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nclass YourRobotStats extends React.Component {\r\n    render() { \r\n        return ( \r\n            <div style={DivContStyle} className='bg-dark text-white '>\r\n                    <h1 id='YourRobotName' style={{fontFamily:'Open Sans, Noto Sans, Roboto, Sans Sarif', fontSize:'3vw'}}>Name: {this.props.name}</h1>\r\n                    <div style={DivSize}>\r\n                    <img style={YourRobotImageStyle} src={this.props.RobotImage} alt=''></img>\r\n                    <ul style={UlListStyle}>\r\n                        <h3 style={YourRobotStatsStyle}>Stats:</h3>\r\n                        <li style={YourRobotHealthStyle}>Health:{this.props.health}</li>\r\n                    </ul>\r\n                    </div>\r\n                    <div style={DivSize}>\r\n                    <ol style={OlListStyle}>\r\n                        <h4 style={YourRobotAttackStyle}>Attacks:</h4>\r\n                        {this.props.attacks.map((ele, index) => {\r\n                            return(\r\n                            <li style={YourRobotAttackListStyle} key={index}>{ele}</li>\r\n                            )\r\n                        })}\r\n                    </ol>\r\n                    </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\nconst UlListStyle = {\r\n    listStyleType:'none',\r\n    textAlign:'center'\r\n};\r\nconst OlListStyle = {\r\n    textAlign:'center',\r\n};\r\nconst DivSize = {\r\n    width:'30%',\r\n\r\n};\r\nconst YourRobotImageStyle = {\r\n    height:'auto',\r\n    width:'15vw',\r\n    fontFamily:'Open Sans, Noto Sans, Roboto, Sans Sarif'\r\n};\r\nconst YourRobotStatsStyle = {\r\n    fontSize:'3.5vh',\r\n    fontFamily:'Open Sans, Noto Sans, Roboto, Sans Sarif'\r\n};\r\nconst YourRobotHealthStyle = {\r\n    fontSize:'2.5vh',\r\n    fontFamily:'Open Sans, Noto Sans, Roboto, Sans Sarif'\r\n};\r\nconst YourRobotAttackStyle = {\r\n    fontSize:'3.5vh',\r\n    fontFamily:'Open Sans, Noto Sans, Roboto, Sans Sarif'\r\n};\r\nconst YourRobotAttackListStyle = {\r\n    fontSize:'2.5vh',\r\n    fontFamily:'Open Sans, Noto Sans, Roboto, Sans Sarif'\r\n};\r\nconst DivContStyle = {\r\n    border:'1px solid black',\r\n    backgroundColor:'rgba(211, 211, 211, 0.850)',\r\n    color:'black',\r\n    borderRadius:'8px',\r\n    marginTop:'25px',\r\n    display:'flex',\r\n    flexDirection:'column',\r\n    alignItems:'center',\r\n    width:'40vw',\r\n    height:'auto',\r\n    marginLeft:'auto',\r\n    marginRight:'auto'\r\n};\r\n\r\n// PropTypes\r\nYourRobotStats.propTypes = {\r\n    name:PropTypes.string,\r\n    health:PropTypes.number,\r\n    attacks:PropTypes.array\r\n};\r\nexport default YourRobotStats;","import React from 'react';\r\nimport YourRobotStats from './YourRobotStats';\r\nimport YourRobotPic from '../pictures/YourRobotPic.jpg';\r\nimport NavBar from './NavBar';\r\nimport PropTypes from 'prop-types'\r\nclass YourRobot extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            YourRobot:[]\r\n        }\r\n    };\r\n    render() { \r\n        return ( \r\n            <div className='YourRobotPage' style={YourRobotPageStyle}>\r\n                <NavBar\r\n                onClick={this.props.onClick} \r\n                onPointerLeave={this.props.onPointerLeave} \r\n                onPointerEnter={this.props.onPointerEnter} \r\n                GitHubLinkStyle={this.props.GitHubLinkStyle}\r\n                ></NavBar>\r\n                {this.props.YourRobot.map((ele) => {\r\n                        return(\r\n                            <YourRobotStats\r\n                            key={ele._id}\r\n                            name={ele.name}\r\n                            health={ele.Health}\r\n                            attacks={ele.Attacks}\r\n                            RobotImage={YourRobotPic}\r\n                            ></YourRobotStats>\r\n                        )\r\n                })}\r\n            </div>\r\n         );\r\n    }\r\n}\r\nconst YourRobotPageStyle = {\r\n    height:'100vh',\r\n    color:'White',\r\n};\r\n\r\n// PropTypes\r\nYourRobot.propTypes = {\r\n    onClick:PropTypes.func.isRequired,\r\n    onPointerEnter:PropTypes.func.isRequired,\r\n    onPointerLeave:PropTypes.func.isRequired,\r\n    YourRobot:PropTypes.array\r\n};\r\nexport default YourRobot;","import React from 'react';\r\nclass Filler extends React.Component {\r\n    render() { \r\n        return ( \r\n            <div style={{width:`${this.props.Health}%`, backgroundColor:'#B72000',  borderRadius:'50px', height:'100%', textAlign:'center'}}>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n\r\nexport default Filler;","import React from 'react';\r\nimport Filler from './Filler';\r\nimport PropTypes from 'prop-types';\r\nclass HealthBar extends React.Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <div>\r\n              <div style={progressBar}>\r\n                  <Filler Health={this.props.Health}></Filler>\r\n              </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\nconst progressBar={\r\n    marginLeft:'auto',\r\n    marginRight:'auto',\r\n    height:'30px',\r\n    width:'100%',\r\n    borderRadius:'50px',\r\n    border:'1px solid black',\r\n    position:'relative'\r\n};\r\n\r\n// PropTypes\r\nHealthBar.propTypes = {\r\n    Health:PropTypes.number.isRequired\r\n};\r\nexport default HealthBar;","import React from 'react';\r\nimport HealthBar from './HealthBar';\r\nimport PropTypes from 'prop-types';\r\nclass RobotFightCard extends React.Component {\r\n    \r\n    \r\n    render() { \r\n        return ( \r\n            <div className='YourRobot bg-dark text-white' style={this.props.AttackStyle}>\r\n                <h3>{this.props.Name}</h3>\r\n                <img style={RobotImageStyle} src={this.props.RobotImage} alt=''></img>\r\n                <h4>Health: {this.props.Health}%</h4>\r\n                <HealthBar Health={this.props.Health}></HealthBar>\r\n                <form className='form' style={formStyle}\r\n                target='input'\r\n                    onSubmit={(e) => {this.props.onSubmit(e)}}>\r\n                        \r\n                    {this.props.Attacks.map((ele, index) => {\r\n                        return(\r\n                                <label\r\n                                    style={LabelInputStyle}\r\n                                    key={index} \r\n                                    htmlFor='Attacks'>\r\n                                    {ele} {' '}\r\n                                        <input onChange={(e) => this.props.onChange(e)}\r\n                                        name=\"Attacks\" \r\n                                        type='radio' \r\n                                        value={ele} \r\n                                        id={index}\r\n                                        checked={Number(this.props.Checked) === index}\r\n                                        required\r\n                                        ></input>\r\n                                </label>\r\n                        )\r\n                    })}\r\n\r\n                    <button disabled={this.props.disabled} className='btn btn-primary btn-lg' type='Submit'>End Turn</button>\r\n                </form>\r\n                \r\n            </div>\r\n         );\r\n    }\r\n};\r\n \r\nconst formStyle={\r\n    display:'flex',\r\n    flexDirection:'column',\r\n    \r\n};\r\nconst RobotImageStyle = {\r\n    height:'auto',\r\n    width:'12vw'\r\n};\r\nconst LabelInputStyle = {\r\n    fontSize:'2.5vh',\r\n    marginTop:'10px',\r\n};\r\n\r\n// PropTypes\r\nRobotFightCard.propTypes = {\r\n    AttackStyle:PropTypes.object,\r\n    Name:PropTypes.string,\r\n    Health:PropTypes.number,\r\n    onSubmit:PropTypes.func,\r\n    Attacks:PropTypes.array,\r\n    disabled:PropTypes.bool\r\n};\r\nexport default RobotFightCard;","import React from 'react';\r\nimport HealthBar from './HealthBar';\r\nimport PropTypes from 'prop-types';\r\nclass EnemyFightCard extends React.Component {\r\n    \r\n    render() { \r\n        \r\n        return ( \r\n            <div className='bg-dark text-white' style={this.props.EnemyStyle}>\r\n                <h3>{this.props.Name}</h3>\r\n                <img style={EnemyImageStyle} src={this.props.EnemyRobotPic} alt=''></img>\r\n                <h4 style={{transition:'ease-in, 200ms'}} id='EnemyRobotHealth'>Health:{this.props.Health}%</h4>\r\n                <HealthBar Health={this.props.Health}></HealthBar>\r\n            </div>\r\n            );\r\n    }\r\n}\r\nconst EnemyImageStyle = {\r\n    height:'auto',\r\n    width:'9vw'\r\n};\r\n\r\n// PropTypes\r\nEnemyFightCard.propTypes = {\r\n    EnemyStyle:PropTypes.object,\r\n    Name:PropTypes.string,\r\n    Health:PropTypes.number,\r\n    \r\n};\r\nexport default EnemyFightCard;","import React from 'react';\r\nimport RobotFightCard from './RobotFightCard';\r\nimport EnemyFightCard from './EnemyFightCard';\r\nimport YourRobotPic from '../pictures/YourRobotPic.jpg';\r\nimport Robot1 from '../pictures/Robot1.jpg';\r\nimport NavBar from './NavBar';\r\nimport PropTypes from 'prop-types';\r\nclass OneFight extends React.Component {\r\n\r\n\r\n\r\n    render() { \r\n        return ( \r\n            <div className='FightPage' style={FightPageStyle}>\r\n                <NavBar\r\n                onClick={this.props.onClick} \r\n                onPointerLeave={this.props.onPointerLeave} \r\n                onPointerEnter={this.props.onPointerEnter} \r\n                GitHubLinkStyle={this.props.GitHubLinkStyle}></NavBar>\r\n                <header>\r\n                <h1 style={{fontSize:'5.5vh', fontFamily:'Open Sans, Noto Sans, Roboto, Sans Sarif'}}>Battle!</h1>\r\n                </header>\r\n                <div style={containerStyle}>\r\n                {this.props.YourRobot.map((ele) => {\r\n                        return(\r\n                        <RobotFightCard key={ele._id} \r\n                        Name={ele.name} \r\n                        Attacks={ele.Attacks.map((ele, index) => {\r\n                            return ele\r\n                        })}\r\n                        Health={ele.Health}\r\n                        onSubmit={(e) => this.props.onSubmit(e)}\r\n                        onChange={(e) => this.props.onChange(e)}\r\n                        Checked={this.props.Checked}\r\n                        disabled={this.props.disabled}\r\n                        AttackStyle={this.props.AttackStyle}\r\n                        RobotImage={YourRobotPic}\r\n                        ></RobotFightCard>\r\n                    )\r\n                })}\r\n                <div>\r\n                </div>\r\n\r\n                <div>\r\n                    {this.props.EnemyRobot.map((ele, index) => {\r\n                        return(\r\n                            <EnemyFightCard\r\n                            key={ele._id}\r\n                            Health={ ele.Health}\r\n                            Name={ ele.name }\r\n                            EnemyStyle={this.props.EnemyStyle}\r\n                            EnemyRobotPic={Robot1}\r\n                            ></EnemyFightCard>\r\n                        )\r\n                })}\r\n                </div>\r\n                </div>\r\n            </div>\r\n            );\r\n    }\r\n};\r\nconst containerStyle={\r\n    display:'flex',\r\n    justifyContent:'center',\r\n};\r\nconst FightPageStyle = {\r\n    height:'100%',\r\n    color:'White'\r\n};\r\n\r\n// PropTypes\r\nOneFight.propTypes = {\r\n    onClick:PropTypes.func.isRequired,\r\n    onPointerEnter:PropTypes.func.isRequired,\r\n    onPointerLeave:PropTypes.func.isRequired,\r\n    GitHubLinkStyle:PropTypes.object,\r\n    YourRobot:PropTypes.array,\r\n    onSubmit:PropTypes.func,\r\n    onChange:PropTypes.func,\r\n    disabled:PropTypes.bool,\r\n    AttackStyle:PropTypes.object,\r\n    EnemyStyle:PropTypes.object\r\n};\r\nexport default OneFight;","import React from 'react';\r\nfunction Error(){\r\n    return(\r\n        <div>\r\n            <h1>404</h1>\r\n            <p>Error has occured</p>\r\n        </div>\r\n    )\r\n};\r\nexport default Error;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nclass YouLose extends React.Component {\r\n    render() { \r\n        return(\r\n        <div className='YouLosePage' style={YouLosePageStyle}>\r\n                <h1>Sorry, you Lost. Click the button to Reset and try again</h1>\r\n                <button style={YouLoseButtonStyle} className='btn-primary' onClick={this.props.onClick}>Reset</button>\r\n        </div>\r\n    )\r\n    }\r\n};\r\nconst YouLosePageStyle = {\r\n    height:'100%',\r\n    color:'White',\r\n};\r\nconst YouLoseButtonStyle = {\r\n    paddingLeft:'40px',\r\n    paddingRight:'40px',\r\n    paddingTop:'20px',\r\n    paddingBottom:'20px',\r\n    fontSize:'20px',\r\n    fontFamily:'Open Sans, Noto Sans, Roboto, Sans Sarif'\r\n};\r\n\r\n// PropTypes\r\nYouLose.propTypes = {\r\n    onClick:PropTypes.func.isRequired\r\n};\r\nexport default YouLose;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nclass YouWin extends React.Component {\r\n    render() { \r\n        return(\r\n        <div className='YouWinPage' style={YouWinPageStyle}>\r\n                <h1 style={{fontSize:'60px',fontFamily:'Open Sans, Noto Sans, Roboto, Sans Sarif'}}>You Win!</h1>\r\n                <button style={YouWinButtonStyle} className='btn-primary' onClick={this.props.onClick}>Continue</button>\r\n        </div>\r\n    )\r\n    }\r\n};\r\nconst YouWinPageStyle = {\r\n    height:'100%',\r\n    color:'White',\r\n};\r\nconst YouWinButtonStyle = {\r\n     paddingLeft:'40px',\r\n    paddingRight:'40px',\r\n    paddingTop:'20px',\r\n    paddingBottom:'20px',\r\n    fontSize:'20px',\r\n    fontFamily:'Open Sans, Noto Sans, Roboto, Sans Sarif'\r\n};\r\n\r\n// PropTypes\r\nYouWin.propTypes = {\r\n    onClick:PropTypes.func.isRequired\r\n};\r\nexport default YouWin;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nclass Reset extends React.Component {\r\n    render() { \r\n        return ( \r\n            <div className='ResetPage' style={ResetPageStyle}>\r\n                <h1 style={{fontFamily:'Open Sans, Noto Sans, Roboto, Sans Sarif'}}>There are no more battles left to fight</h1>\r\n                <p style={{fontSize:'30px',fontFamily:'Open Sans, Noto Sans, Roboto, Sans Sarif'}}>Click the button to reset</p>\r\n                <button style={ResetPageButtonStyle} className='btn-primary' onClick={this.props.onClick}>Reset</button>\r\n            </div>\r\n         );\r\n    }\r\n};\r\nconst ResetPageStyle = {\r\n    height:'100%',\r\n    color:'White'\r\n};\r\nconst ResetPageButtonStyle = {\r\n    paddingLeft:'40px',\r\n    paddingRight:'40px',\r\n    paddingTop:'20px',\r\n    paddingBottom:'20px',\r\n    fontSize:'20px',\r\n    fontFamily:'Open Sans, Noto Sans, Roboto, Sans Sarif'\r\n};\r\n\r\n// PropTypes\r\nReset.propTypes = {\r\n    onClick:PropTypes.func.isRequired\r\n};\r\nexport default Reset;","import React from 'react';\nimport './App.css';\nimport {Switch, Route, withRouter} from 'react-router-dom';\nimport Robots from './RobotsDatabasetest';\nimport Home from './components/Home';\nimport YourRobot from './components/YourRobot';\nimport OneFight from './components/OneFight';\nimport Error from './components/404';\nimport YouLose from './components/YouLose';\nimport YouWin from './components/YouWin';\nimport Reset from './components/Reset';\nimport axios from 'axios';\nimport PropTypes from 'prop-types'\n\nclass App extends React.Component {\n  constructor(){\n    super()\n    this.state={\n        Robots:[],\n        EnemyRobots:[],\n        EnemyRobot:[],\n        YourRobot:[],\n        PlayerAttack:'',\n        Checked:NaN,\n        Disabled:false,\n        AttackStyle:{\n        width:'25vw',\n        marginLeft:'0',\n        border:'5px solid black',\n        display:'inline-block',\n        position:'relative',\n        borderRadius:'8px'\n},\n        EnemyAttackStyle: {\n            width:'25vw',\n            marginLeft:'0',\n            border:'5px solid black',\n            display:'inline-block',\n            position:'relative',\n            borderRadius:'8px',\n        },\n        GitHubLinkStyle:{\n          display:'none'\n        },\n    }\n  };\nasync componentDidMount(){\n    await axios.get('https://radiant-everglades-71115.herokuapp.com/')\n  .then((res) => {\n    let YourRobot =  res.data.find((ele) => {\n       if(ele.PlayerRobot === true){\n          return ele\n        }else{\n          return null\n        }\n    });\n    let getEnemyRobots =  res.data.filter((ele) => {\n      if(ele.PlayerRobot === false){\n        return ele\n    }\n    return null\n    });\n    this.setState({\n    ...this.state,\n    Robots:res.data,\n    YourRobot:[YourRobot],\n    EnemyRobots:getEnemyRobots,\n\n  });\n  })\n  .catch((err) => {console.log(err)});\n\n    let enemyNum = await Math.floor(Math.random() * Math.floor(this.state.EnemyRobots.length));\n      if(this.state.EnemyRobot.length < 1){\n        \n      }\n    let findEnemyRobot = await this.state.EnemyRobots.find((ele,index) => {\n        if(index === enemyNum){\n            return ele\n        }\n        return null\n        });\n\n    this.setState({...this.state,\n        EnemyRobot:[findEnemyRobot]\n    });\n  };\n\n  onSubmit = async (e, prop) => {\n    e.preventDefault();\n\n    // Resetting the stored css style in state\n    this.setState({ ...this.state,\n        PlayerAttack:'',\n        Checked:NaN,\n        AttackStyle:{\n          width:'25vw',\n          marginLeft:'0',\n          border:'5px solid black',\n          display:'inline-block',\n          position:'relative',\n          borderRadius:'8px'\n        },\n        EnemyAttackStyle: {\n            width:'25vw',\n            marginLeft:'0',\n            border:'5px solid black',\n            display:'inline-block',\n            position:'relative',\n            borderRadius:'8px'\n        }\n      });\n      // Declairing and storing the enemy choice for the turn\n     let enemyChoice = Math.floor(Math.random() * Math.floor(2));\n    //  Playing out if player chooses to heal\n    if(this.state.PlayerAttack === 'Heal'){\n      // Declaired and stored the update to the player health\n        let newPlayerHealth = this.state.YourRobot.map((ele) => {\n          if(ele.Health !== 100){\n              ele.Health = 100\n          }\n          return ele\n      });\n      // Updated state to show new player health\n      this.setState({...this.state,\n        YourRobot:newPlayerHealth,\n        Disabled:true,\n        PlayerAttack:'',\n        Checked:NaN,\n      })\n    // Starting enemy turn\n      setTimeout(() => {\n        setTimeout( () => {\n          if(enemyChoice === 1){\n        let healEnemy = this.state.EnemyRobot.map((ele) => {\n            if(ele.Health < 100){\n              ele.Health += 5\n            }\n            return ele;\n          })\n            this.setState({...this.state,\n            EnemyRobot: healEnemy,\n            EnemyAttackStyle:{\n            width:'25vw',\n            marginLeft:'0',\n            border:'5px solid Green',\n            display:'inline-block',\n            position:'relative',\n            borderRadius:'8px'\n          },\n          Disabled:false\n            })\n        }\n      }, 1000)\n\n        if(enemyChoice === 0){\n        this.setState({...this.state,\n        AttackStyle:{\n          width:'25vw',\n          marginLeft:'0',\n          border:'5px solid black',\n          display:'inline-block',\n          position:'relative',\n          borderRadius:'8px'\n          },\n          EnemyAttackStyle:{\n          width:'25vw',\n          marginLeft:'0',\n          border:'5px solid black',\n          display:'inline-block',\n          position:'relative',\n          animationName:'EnemyAttack',\n          animationDuration:'1s',\n          animationTimingFunction:'ease-in',\n          borderRadius:'8px'\n          }\n      })\n      setTimeout(() =>{\n        let updatePlayer =  this.state.YourRobot.map((ele) => {\n            if(ele.Health > 0){\n            ele.Health -= 10\n          }\n            return ele\n          });\n        this.setState({...this.state,\n          Disabled:false,\n          YourRobot:updatePlayer,\n            EnemyAttackStyle: {\n            width:'25vw',\n            marginLeft:'0',\n            border:'5px solid black',\n            display:'inline-block',\n            position:'relative',\n            borderRadius:'8px'\n        }\n        })\n      }, 1000)\n        }\n      }, 2000)\n    }else if(this.state.PlayerAttack === 'Defend'){\n      this.setState({...this.state,\n        AttackStyle:{\n        width:'25vw',\n        marginLeft:'0',\n        border:'5px solid Gold',\n        display:'inline-block',\n        position:'relative',\n        borderRadius:'8px'\n        },\n        PlayerAttack:'',\n        Checked:NaN,\n        Disabled:true,\n        EnemyAttackStyle: {\n            width:'25vw',\n            marginLeft:'0',\n            border:'5px solid black',\n            display:'inline-block',\n            position:'relative',\n            borderRadius:'8px'\n        },\n      })\n\n      setTimeout(() => {\n        this.setState({...this.state,\n          EnemyAttackStyle:{\n          width:'25vw',\n          marginLeft:'0',\n          border:'5px solid black',\n          display:'inline-block',\n          position:'relative',\n          animationName:'EnemyAttack',\n          animationDuration:'1s',\n          animationTimingFunction:'ease-in',\n          borderRadius:'8px'\n          }\n      })\n      setTimeout(() => {\n        this.setState({...this.state,\n        Disabled:false,\n        AttackStyle:{\n          width:'25vw',\n          marginLeft:'0',\n          border:'5px solid black',\n          display:'inline-block',\n          position:'relative',\n          borderRadius:'8px'\n          },\n        EnemyAttackStyle:{\n          width:'25vw',\n          marginLeft:'0',\n          border:'5px solid black',\n          display:'inline-block',\n          position:'relative',\n          borderRadius:'8px'\n          }\n      })\n      }, 1000)\n      }, 2000)\n    }else{\n      setTimeout(() => {\n        let updateEnemy = this.state.EnemyRobot.map((ele) => {\n        if(ele.Health > 0){\n          ele.Health -= 10\n        }\n        return ele\n      })\n\n        this.setState({...this.state,\n            EnemyRobot:updateEnemy,\n            Disabled:true,\n        })\n      }, 1000)\n      \n      this.setState({...this.state,\n        PlayerAttack:'',\n        Checked:NaN,\n        AttackStyle:{\n          width:'25vw',\n          marginLeft:'0',\n          border:'5px solid black',\n          display:'inline-block',\n          position:'relative',\n          animationName:'Attack',\n          animationDuration:'1s',\n          animationTimingFunction:'ease-in',\n          borderRadius:'8px'\n        },\n        EnemyAttackStyle: {\n            width:'25vw',\n            marginLeft:'0',\n            border:'5px solid black',\n            display:'inline-block',\n            position:'relative',\n            borderRadius:'8px'\n        }\n      });\n      \n          setTimeout(() => {\n            if(this.state.EnemyRobot[0].Health <= 0){\n              this.setState({\n                  AttackStyle:{\n                    width:'25vw',\n                    marginLeft:'0',\n                    border:'5px solid black',\n                    display:'inline-block',\n                    position:'relative',\n                    borderRadius:'8px'\n                  },\n                  EnemyAttackStyle: {\n                    width:'25vw',\n                    marginLeft:'0',\n                    border:'5px solid black',\n                    display:'inline-block',\n                    position:'relative',\n                    borderRadius:'8px'\n                  },\n              });\n              this.props.history.push('/YouWin');\n            }else{\n              setTimeout( () => {\n          if(enemyChoice === 1){\n        let healEnemy = this.state.EnemyRobot.map((ele) => {\n            if(ele.Health < 100){\n              ele.Health += 5\n            }\n            return ele;\n          })\n            this.setState({...this.state,\n            EnemyRobot: healEnemy,\n            EnemyAttackStyle:{\n            width:'25vw',\n            marginLeft:'0',\n            border:'5px solid Green',\n            display:'inline-block',\n            position:'relative',\n            borderRadius:'8px'\n          },\n          Disabled:false\n            })\n        }\n      }, 1000)\n\n        if(enemyChoice === 0){\n        this.setState({...this.state,\n        AttackStyle:{\n          width:'25vw',\n          marginLeft:'0',\n          border:'5px solid black',\n          display:'inline-block',\n          position:'relative',\n          borderRadius:'8px'\n          },\n          EnemyAttackStyle:{\n          width:'25vw',\n          marginLeft:'0',\n          border:'5px solid black',\n          display:'inline-block',\n          position:'relative',\n          animationName:'EnemyAttack',\n          animationDuration:'1s',\n          animationTimingFunction:'ease-in',\n          borderRadius:'8px'\n          }\n      })\n      setTimeout(() =>{\n        let updatePlayer =  this.state.YourRobot.map((ele) => {\n            if(ele.Health > 0){\n            ele.Health -= 10\n          }\n            return ele\n          });\n        this.setState({...this.state,\n          Disabled:false,\n          YourRobot:updatePlayer,\n            EnemyAttackStyle: {\n            width:'25vw',\n            marginLeft:'0',\n            border:'5px solid black',\n            display:'inline-block',\n            position:'relative',\n            borderRadius:'8px'\n        }\n        })\n      }, 1000)\n        }\n            }\n        \n      }, 2000)\n       \n    }\n  };\n    \n  onChange = (e) => {\n    this.setState({...this.state,\n      PlayerAttack:e.target.value,\n      Checked:e.target.id\n    })\n  };\n\n  onPointerEnter = () => {\n        this.setState({...this.state,\n      GitHubLinkStyle:{\n        listStyleType:'none',\n        position:'relative',\n        border:'1px solid Black',\n        padding:'10px',\n        backgroundColor:'#234691',\n\n      }\n    })\n  };\n  onPointerLeave = () => {\n    this.setState({...this.state,\n      GitHubLinkStyle:{\n        display:'none'\n      }\n    })\n  };\n\n  youWinButton = async () => {\n      let newPlayerHealth = this.state.YourRobot.map((ele) => {\n        ele.Health = 100\n        return ele\n      });\n        let enemyId = this.state.EnemyRobot[0]._id;\n      let newEnemyRobot =  await axios.delete(`https://radiant-everglades-71115.herokuapp.com/${enemyId}`)\n          .then((response) => {\n            return response.data;\n          })\n          .catch((err) => console.log(err));\n        if(!newEnemyRobot || newEnemyRobot.length < 1){\n          this.props.history.push('/CyberneticCarnage/Reset')\n        }else{\n            this.setState({...this.state,\n        YourRobot:newPlayerHealth,\n        EnemyRobot:[newEnemyRobot],\n        Disabled:false,\n        AttackStyle:{\n          width:'25vw',\n          marginLeft:'0',\n          border:'5px solid black',\n          display:'inline-block',\n          position:'relative',\n          borderRadius:'8px'\n          },\n          EnemyAttackStyle: {\n            width:'25vw',\n            marginLeft:'0',\n            border:'5px solid black',\n            display:'inline-block',\n            position:'relative',\n            borderRadius:'8px'\n        },\n      });\n      this.props.history.push('/CyberneticCarnage');\n    }\n  };\n  resetButton = async () => {\n    let resetRobots = await axios.post('https://radiant-everglades-71115.herokuapp.com/',\n    {\n      Robots\n    })\n    .then((response) => {\n      return response.data;\n    })\n    .catch((err) => {\n      console.log(err)\n    });\n    this.setState({\n      ...this.state,\n      Robots:resetRobots,\n      Disabled:false,\n        AttackStyle:{\n          width:'25vw',\n          marginLeft:'0',\n          border:'5px solid black',\n          display:'inline-block',\n          position:'relative',\n          borderRadius:'8px'\n          },\n          EnemyAttackStyle: {\n            width:'25vw',\n            marginLeft:'0',\n            border:'5px solid black',\n            display:'inline-block',\n            position:'relative',\n            borderRadius:'8px'\n        },\n    });\n   let getEnemyRobot = await this.state.Robots.find((ele) => {\n      if(ele.PlayerRobot === false){\n        return ele\n      }\n      return null\n    });\n    this.setState({\n      EnemyRobot:[getEnemyRobot]\n    });\n    this.props.history.push('/CyberneticCarnage');\n  };\n  render(){\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path='/CyberneticCarnage'>\n        <Home\n        onClick={this.resetButton} \n        onPointerLeave={this.onPointerLeave} \n        onPointerEnter={this.onPointerEnter} \n        GitHubLinkStyle={this.state.GitHubLinkStyle}\n        ></Home></Route>\n        <Route path='/CyberneticCarnage/YourRobot'>\n          <YourRobot\n          onClick={this.resetButton} \n          onPointerLeave={this.onPointerLeave} \n          onPointerEnter={this.onPointerEnter} \n          GitHubLinkStyle={this.state.GitHubLinkStyle} \n          YourRobot={this.state.YourRobot}></YourRobot></Route>\n        <Route path='/CyberneticCarnage/SingleBattle'>\n            <OneFight \n              onClick={this.resetButton} \n              onPointerLeave={this.onPointerLeave} \n              onPointerEnter={this.onPointerEnter} \n              GitHubLinkStyle={this.state.GitHubLinkStyle}\n              YourRobot={this.state.YourRobot}\n              EnemyRobot={this.state.EnemyRobot}\n              onSubmit={this.onSubmit}\n              onChange={this.onChange}\n              Checked={this.state.Checked}\n              disabled={this.state.Disabled}\n              AttackStyle={this.state.AttackStyle}\n              EnemyStyle={this.state.EnemyAttackStyle}\n            ></OneFight>\n          </Route>\n          <Route path='/CyberneticCarnage/YouLose'><YouLose onClick={this.resetButton}></YouLose></Route>\n          <Route path='/CyberneticCarnage/YouWin'>\n            <YouWin\n            onClick={this.youWinButton}\n            ></YouWin></Route>\n            <Route path='/CyberneticCarnage/Reset'><Reset onClick={this.resetButton}></Reset></Route>\n        <Route  path=''><Error></Error></Route>\n      </Switch>\n    </div>\n  );\n  }\n};\n\n// PropTypes\nApp.propTypes = {\n  Robots:PropTypes.array,\n  EnemyRobots:PropTypes.array,\n  EnemyRobot:PropTypes.array,\n  YourRobot:PropTypes.array,\n  PlayerAttack:PropTypes.string,\n  Disabled:PropTypes.bool,\n  AttackStyle:PropTypes.object,\n  EnemyAttackStyle:PropTypes.object,\n  GitHubLinkStyle:PropTypes.object,\n};\nexport default withRouter(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom'\n\n\nReactDOM.render(\n  <BrowserRouter>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}